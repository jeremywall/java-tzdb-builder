name: Build Latest TZDB

on:
  workflow_dispatch:
  push:
    branches:
      - main
#  schedule:
#    - cron: '0 0 * * *'

# $JAVA_HOME/lib/tzdb.dat

jobs:
  check:
    name: Check if newer version available
    runs-on: ubuntu-latest
    outputs:
      build_required: ${{steps.build_required.outputs.required}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Fetch latest version file from IANA
        run: wget https://data.iana.org/time-zones/tzdb/version
      - name: Determine versions
        id: versions
        run: |
          IANA_VERSION=`cat version | sed 's/ *//g'`
          echo "::set-output name=iana_version::$IANA_VERSION"
          LAST_PROCESSED_VERSION=`cat last-processed-version | sed 's/ *//g'`
          echo "::set-output name=last_processed_version::$LAST_PROCESSED_VERSION"
      - name: Print versions
        run: echo IANA version [${{steps.versions.outputs.iana_version}}] last processed version [${{steps.versions.outputs.last_processed_version}}]
      - name: Check if a build is required
        id: build_required
        run: |
          if [ "${{steps.versions.outputs.iana_version}}" != "${{steps.versions.outputs.last_processed_version}}" ]; then
            echo "::set-output name=required::true"
          else
            echo "::set-output name=required::false"
          fi
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: check
    if: needs.check.outputs.build_required == 'true'
    steps:
      - run: mkdir tzdb-temp
      - run: cd tzdb-temp
      - run: wget https://data.iana.org/time-zones/tzcode-latest.tar.gz
      - run: wget https://data.iana.org/time-zones/tzdata-latest.tar.gz
      - run: tar xzfv tzcode-latest.tar.gz
      - run: tar xzfv tzdata-latest.tar.gz
      - run: make rearguard_tarballs
      - run: ls -la


#      - run: which java
#      - run: which javac
#      - run: java -version
#      - run: javac -version
#      - run: head $JAVA_HOME/lib/tzdb.dat
#      - run: wget -O- https://apt.corretto.aws/corretto.key | sudo apt-key add - 
#      - run: sudo add-apt-repository 'deb https://apt.corretto.aws stable main'
#      - run: sudo apt-get update
#      - run: sudo apt-get install -y java-17-amazon-corretto-jdk
#      - run: ls -la /usr/lib/jvm/java-17-amazon-corretto
#      - run: sudo update-alternatives --set java "/usr/lib/jvm/java-17-amazon-corretto/bin/java"
#      - run: sudo update-alternatives --set javac "/usr/lib/jvm/java-17-amazon-corretto/bin/javac"
#      - run: export JAVA_HOME=/usr/lib/jvm/java-17-amazon-corretto
#      - run: wget https://data.iana.org/time-zones/tzdb/version
#      - run: cat version